<?xml version="1.0" encoding="UTF-8"?>
<!--
 Phing build file for GoodsCatalog

 $Id$
 -->

<project name="goodscatalog" default="build" basedir="./">

	<property file="build.properties" />
	
	<!--
	=====================================================================
	Filesets definitions
	=====================================================================
	-->
	
	<!-- Исходные файлы -->
	<fileset dir="src" id="files.sources">
		<include name="**" />
		<exclude name=".svn" />
	</fileset>
	
		<!-- Исходные файлы PHP -->
		<fileset dir="src" id="files.sources.php">
			<include name="**/*.php" />
		</fileset>
	
	<!--
	=====================================================================
	Модульные тесы
	=====================================================================
	-->
	<target name="tests" description="Run unit tests">

		<phplint>
			<fileset refid="files.sources.php" />
		</phplint>

		<mkdir dir="${logs.dir}" />
		<exec
			command="phpunit --log-junit ${logs.dir}/phpunit.xml --coverage-clover ${logs.dir}/phpunit.coverage.xml --coverage-html ${phpunit.coverage.html} ${project.basedir}/tests/phpunit/AllTests.php"
			checkreturn="true"
			logoutput="true"
		/>
		 
	</target>

	<!--
	=====================================================================
	Поиск плохого кода
	=====================================================================
	-->
	<target name="mess" description="Mess detection">
	
		<mkdir dir="${logs.dir}" />
		<phpmd rulesets="${phpmd.rulesets}">
			<formatter
				type="${phpmd.format}"
				outfile="${logs.dir}/phpmd.${phpmd.format}"
			/>
			<fileset refid="files.sources.php" />
		</phpmd>
		
	</target>

	<!--
	=====================================================================
	Prepare for build
	=====================================================================
	-->

	<target name="prepare" depends="clean" description="Prepare for build">

		<php function="dirname" returnProperty="phing.root">
			<param value="${env.SCRIPT_NAME}" />
		</php>

		<mkdir dir="${build.dir}" />
		<mkdir dir="${logs.dir}" />
		<mkdir dir="${phpunit.coverage.html}" />

		<!--
			Check sources for coding standards
		-->
		<if>
			<istrue value="${phpcs}" />
			<then>
				<phpcodesniffer
					standard="Eresus"
					haltonerror="false"
				>
					<formatter
						type="${phpcs.format}"
						outfile="${logs.dir}/phpcs.${phpcs.format}"
					/>
					<fileset refid="files.sources.php" />
				</phpcodesniffer>
			</then>
		</if>

	</target>

	<!--
	=====================================================================
	Clean up after build
	=====================================================================
	-->

	<target name="clean" description="Clean up build">

		<delete dir="${phpunit.coverage.temp}" includeemptydirs="true" />
		<delete dir="${build.dir}" includeemptydirs="true" />
		
	</target>

	<!--
	=====================================================================
	Build project
	=====================================================================
	-->

	<target name="build" depends="prepare" description="Build project">

		<copy todir="${build.dir}">
			<fileset refid="files.sources" />
			<filterchain>
			    <expandproperties />
		  </filterchain>
		</copy>

	</target>

	<!--
	=====================================================================
	Документация API
	=====================================================================
	-->
	<target name="docs" description="Generate documentation">

		<phpdoc title="API Documentation"
		  destdir="${docs.dir}"
		  sourcecode="no"
			parseprivate="false"
		  output="${docs.converter}">
		   <fileset dir="${build.dir}">
		      <include name="**/*.php" />
		   </fileset>
		   <projdocfileset dir=".">
		      <include name="README" />
		      <include name="INSTALL" />
		      <include name="CHANGELOG" />
		   </projdocfileset>
		</phpdoc>

	</target>

	<!--
	=====================================================================
	Создание дистрибутива
	=====================================================================
	-->
	<target name="distr" depends="build" description="Build distributive">

		<available file="${distr.dir}" type="dir" property="distr.dir.exists" />
		
		<if>
			<not>
				<isset property="${distr.dir.exists}" />
			</not>
			
			<then>
				<mkdir dir="${distr.dir}" />
			</then>
			
		</if>
		
		<tar destfile="${distr.dir}/${phing.project.name}-${product.version}.tar.bz2" compression="bzip2">
			<fileset dir="${build.dir}">
				<include name="**" />
			</fileset>
		</tar>

	</target>

</project>
